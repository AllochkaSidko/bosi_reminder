<Window x:Class="BoSi_Reminder.CabinetWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BoSi_Reminder"
       xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="CabinetWindow"  MaxHeight="700" MinHeight="700" MaxWidth="1000" Width="1000" >
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoaded}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>

        <Style TargetType="Button"
               x:Key="LogOutStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="DodgerBlue"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="DodgerBlue"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <Style TargetType="Button"
               x:Key="DisplayStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="DeepPink"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="DeepPink"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <Style TargetType="Button"
               x:Key="CreateStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Orange"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="Orange"/>
            <Setter Property="FontWeight" Value="Heavy"/>
            <Setter Property="FontSize" Value="16pt"/>
        </Style>

        <Style TargetType="Button"
               x:Key="DeleteStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Crimson"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="Crimson"/>
            <Setter Property="FontWeight" Value="Heavy"/>
            <Setter Property="FontSize" Value="12pt"/>
        </Style>

        <Style TargetType="Button"
               x:Key="DoneStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="LimeGreen"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="LimeGreen"/>
            <Setter Property="FontWeight" Value="Heavy"/>
            <Setter Property="FontSize" Value="12pt"/>
        </Style>

        <Style TargetType="Button"
               x:Key="RemindStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="DodgerBlue"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="DodgerBlue"/>
            <Setter Property="FontWeight" Value="Heavy"/>
            <Setter Property="FontSize" Value="12pt"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                          Width="25"
                                          Height="25"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="0"
                                          ClipToBounds="True">
                                    <Path x:Name="CheckMark"
                                            Width="14"
                                            Height="14"
                                            StrokeThickness="3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Stretch="Fill"
                                            Data="M 0.5,6.5 L 3.5,9.5 L 4.5,9.5 L 7.5,1.5 L 6,0.5 L 3.5,7 L 1.5,5 Z"
                                            Stroke="Transparent"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="SlateBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="BorderBrush" Value="BlueViolet"/>
        </Style>

    </Window.Resources>


    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="70"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="50"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>

        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,1,0">
            <TextBlock Name="UsernameBlock" Text="{Binding UsernameBlockText}" Foreground="SlateBlue" FontWeight="Medium" FontSize="22pt" Margin="20"></TextBlock>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,0,500,0" Grid.RowSpan="2" Grid.ColumnSpan="2">

            <Viewbox Width="500"  Margin="0,50,0,0">
                <Calendar x:Name="Calendar"  SelectionMode="MultipleRange"  Width="370" SelectedDate="{Binding Date}" DisplayDate="10/22/2017"  SelectedDatesChanged="Calendar_SelectedDatesChanged">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedDatesChanged">
                            <i:InvokeCommandAction Command="{Binding SelectionCommand}" CommandParameter="{Binding SelectedDates, ElementName=Calendar}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Calendar>
            </Viewbox>
            <Popup x:Name="PopUp" StaysOpen="True"/>

        </StackPanel>


        <StackPanel Grid.Row="1" Margin="0,0,0,0" Grid.RowSpan="2" Grid.Column="6">

            <Label Name="DateBlock" FontSize="24" Width="200" MaxWidth="200" Margin="0,10,270,0" Content="{Binding DateBlockContent}" Foreground="Orange"></Label>

            <ListBox  ItemsSource="{Binding UsersReminders, UpdateSourceTrigger=PropertyChanged}"   SelectedItem="{Binding SelectedReminder,UpdateSourceTrigger=PropertyChanged}" Name="ListBox" Height="480" Margin="10,0,20,0" SelectionChanged="ListBox_SelectionChanged">
                <ListBox.Resources>
                    <DataTemplate DataType="{x:Type local:Reminder}">
                        <StackPanel Name ="StackPanel1" Orientation="Horizontal">
                            <Label Name="ReminderDone" FontSize="17" Foreground="Orange" Margin="0,20,0,0" Width="50" Content="{Binding ReactDate.TimeOfDay}" />
                            <TextBox Width="340" MinHeight="50" BorderBrush="DodgerBlue" IsEnabled="False" BorderThickness="2" Foreground="DodgerBlue" FontSize="14" Margin="10,10,0,0" Text="{Binding Text}" />
                            <CheckBox IsEnabled="False" BorderThickness="0" Background="Transparent" Foreground="SlateBlue" FontSize="22" FontWeight="Medium" IsChecked="{Binding IsDone}" Margin="10,20,0,0" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.Resources>
            </ListBox>

        </StackPanel>


        <Button Grid.Row="0" Grid.Column="1" Name="LogOutButton" Style="{StaticResource LogOutStyle}" Content="Log out" HorizontalAlignment="Right"  Margin="0,0,20,0" Width="150" Height="40" Command="{Binding LogOutCommand}"/>
        <Button Grid.Row="1" Grid.Column="1" Name="DisplayAll" Style="{StaticResource DisplayStyle}" Content="Display all" HorizontalAlignment="Right"  Margin="0,-510,20,0" Width="150" Height="40" Click="DisplayAll_Click"/>
        <Button Grid.Row="1" Grid.Column="0" Name="RemindMeButton" Style="{StaticResource RemindStyle}" Content="Remind!" Width="100" HorizontalAlignment="Center" Height="40" Command="{Binding RemindCommand}" Margin="0,140,0,0" />
        <Button Grid.Row="1" Grid.Column="0" Name="CreateReminder" Style="{StaticResource CreateStyle}" VerticalContentAlignment="Center" Content="Set new reminder" HorizontalAlignment="Center"  Height="60" Margin="0,280,0,0" Width="240" Command="{Binding CreateCommand}"/>
        <Button Grid.Row="1" Grid.Column="0" Name="DeleteReminder" Style="{StaticResource DeleteStyle}" VerticalContentAlignment="Center"  Content="Delete" Width="140" Height="40" HorizontalAlignment="Center" Margin="0,420,180,0" Command="{Binding DeleteCommand}"/>
        <Button Grid.Row="1" Grid.Column="0" Name="IsDoneButton" Style="{StaticResource DoneStyle}" VerticalContentAlignment="Center"  Content="Done!" Width="140" HorizontalAlignment="Center" Height="40" Margin="180,420,0,0" Click="IsDoneButton_Click"/>

    </Grid>
</Window>
